Open311 Dashboard
=================
We are creating a set of interactive widgets to help people visualize and analyze 311 data on one unified dashboard.

Getting Started
---------------
1. Rename settings_local.example.py to settings_local.py and set your db/city/secretkey variables.
2. `pip install -r requirements.txt`
3. `python manage.py syncdb` creates the database schema.
4. `python manage.py update_db` imports initial data.
5. `python manage.py runserver`

Database Update Script
----------------------
To update data from the Open311 API, run `python manage.py update_db`.
This command has a few options that may be useful. The first argument is
the end date, defaults to yesterday. The second argument is the number
of days to download previous to that date.

* Ex: `python manage.py updatedb 2011-07-01 30` will download the entire
  month of June.

To set up automatic updates (midnight every night):

1. `crontab -e`
2. Insert `0 0 * * * /path/to/dir/manage.py update_db`


API Access
----------
There are a number API calls to return JSON in various forms.

* `/api`
    * `/tickets/(open|closed|both)`
        * `/[0-9]+` (n days previous to today)
        * `/YYYY-MM-DD(/[0-9]+)` (n days previous to the date)
        * `/YYYY-MM-DD/YYYY-MM-DD` (simple date range)
    * `/more_info/YYYY-MM-DD` (single day)
        * `/YYYY-MM-DD` (range)
    * `/list/YYYY-MM-DD` (singe day)
        * `/YYYY-MM-DD` (range)

Geo Stuff
---------
`shp2pgsql -a -s 4326 neighborhoods.shp dashboard_neighborhoods > neighborhoods.sql`

More Information
----------------
Visit our [project page](http://codeforamerica.org/?cfa_project=open311-dashboard) and our [homepage](http://www.311dashboard.com).

Join the [official Open311 Dashboard mailing list](http://groups.google.com/group/open311-dashboard).

[![Code for America Tracker](http://stats.codeforamerica.org/codeforamerica/open311dashboard.png)](http://stats.codeforamerica.org/projects/open311dashboard)
